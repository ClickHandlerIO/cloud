/**
 * This class is generated by jOOQ
 */
package data.schema.tables.records;


import data.schema.tables.Email;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailRecord extends UpdatableRecordImpl<EmailRecord> implements Record13<String, Long, Timestamp, String, String, String, String, String, String, String, String, Boolean, String> {

	private static final long serialVersionUID = 500915271;

	/**
	 * Setter for <code>email.id</code>.
	 */
	public EmailRecord setId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>email.id</code>.
	 */
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>email.version</code>.
	 */
	public EmailRecord setVersion(Long value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>email.version</code>.
	 */
	public Long getVersion() {
		return (Long) getValue(1);
	}

	/**
	 * Setter for <code>email.changed</code>.
	 */
	public EmailRecord setChanged(Timestamp value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>email.changed</code>.
	 */
	public Timestamp getChanged() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>email.user_id</code>.
	 */
	public EmailRecord setUserId(String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>email.user_id</code>.
	 */
	public String getUserId() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>email.to</code>.
	 */
	public EmailRecord setTo(String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>email.to</code>.
	 */
	public String getTo() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>email.cc</code>.
	 */
	public EmailRecord setCc(String value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>email.cc</code>.
	 */
	public String getCc() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>email.from</code>.
	 */
	public EmailRecord setFrom(String value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>email.from</code>.
	 */
	public String getFrom() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>email.reply_to</code>.
	 */
	public EmailRecord setReplyTo(String value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>email.reply_to</code>.
	 */
	public String getReplyTo() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>email.subject</code>.
	 */
	public EmailRecord setSubject(String value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>email.subject</code>.
	 */
	public String getSubject() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>email.text_body</code>.
	 */
	public EmailRecord setTextBody(String value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>email.text_body</code>.
	 */
	public String getTextBody() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>email.html_body</code>.
	 */
	public EmailRecord setHtmlBody(String value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>email.html_body</code>.
	 */
	public String getHtmlBody() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>email.attachments</code>.
	 */
	public EmailRecord setAttachments(Boolean value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>email.attachments</code>.
	 */
	public Boolean getAttachments() {
		return (Boolean) getValue(11);
	}

	/**
	 * Setter for <code>email.message_id</code>.
	 */
	public EmailRecord setMessageId(String value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>email.message_id</code>.
	 */
	public String getMessageId() {
		return (String) getValue(12);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record13 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row13<String, Long, Timestamp, String, String, String, String, String, String, String, String, Boolean, String> fieldsRow() {
		return (Row13) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row13<String, Long, Timestamp, String, String, String, String, String, String, String, String, Boolean, String> valuesRow() {
		return (Row13) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Email.EMAIL.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return Email.EMAIL.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return Email.EMAIL.CHANGED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Email.EMAIL.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Email.EMAIL.TO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Email.EMAIL.CC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Email.EMAIL.FROM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return Email.EMAIL.REPLY_TO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Email.EMAIL.SUBJECT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return Email.EMAIL.TEXT_BODY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return Email.EMAIL.HTML_BODY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field12() {
		return Email.EMAIL.ATTACHMENTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field13() {
		return Email.EMAIL.MESSAGE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getChanged();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getTo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getCc();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getFrom();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getReplyTo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getSubject();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getTextBody();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getHtmlBody();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value12() {
		return getAttachments();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value13() {
		return getMessageId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value2(Long value) {
		setVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value3(Timestamp value) {
		setChanged(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value4(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value5(String value) {
		setTo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value6(String value) {
		setCc(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value7(String value) {
		setFrom(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value8(String value) {
		setReplyTo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value9(String value) {
		setSubject(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value10(String value) {
		setTextBody(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value11(String value) {
		setHtmlBody(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value12(Boolean value) {
		setAttachments(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value13(String value) {
		setMessageId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord values(String value1, Long value2, Timestamp value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, Boolean value12, String value13) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EmailRecord
	 */
	public EmailRecord() {
		super(Email.EMAIL);
	}

	/**
	 * Create a detached, initialised EmailRecord
	 */
	public EmailRecord(String id, Long version, Timestamp changed, String userId, String to, String cc, String from, String replyTo, String subject, String textBody, String htmlBody, Boolean attachments, String messageId) {
		super(Email.EMAIL);

		setValue(0, id);
		setValue(1, version);
		setValue(2, changed);
		setValue(3, userId);
		setValue(4, to);
		setValue(5, cc);
		setValue(6, from);
		setValue(7, replyTo);
		setValue(8, subject);
		setValue(9, textBody);
		setValue(10, htmlBody);
		setValue(11, attachments);
		setValue(12, messageId);
	}
}
