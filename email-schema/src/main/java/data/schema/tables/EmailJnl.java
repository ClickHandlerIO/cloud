/**
 * This class is generated by jOOQ
 */
package data.schema.tables;


import data.schema.DefaultSchema;
import data.schema.Keys;
import data.schema.tables.records.EmailJnlRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailJnl extends TableImpl<EmailJnlRecord> {

	private static final long serialVersionUID = 2091952742;

	/**
	 * The reference instance of <code>email_jnl</code>
	 */
	public static final EmailJnl EMAIL_JNL = new EmailJnl();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EmailJnlRecord> getRecordType() {
		return EmailJnlRecord.class;
	}

	/**
	 * The column <code>email_jnl.id</code>.
	 */
	public final TableField<EmailJnlRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

	/**
	 * The column <code>email_jnl.version</code>.
	 */
	public final TableField<EmailJnlRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>email_jnl.changed</code>.
	 */
	public final TableField<EmailJnlRecord, Timestamp> CHANGED = createField("changed", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>email_jnl.message_id</code>.
	 */
	public final TableField<EmailJnlRecord, String> MESSAGE_ID = createField("message_id", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

	/**
	 * The column <code>email_jnl.store_id</code>.
	 */
	public final TableField<EmailJnlRecord, String> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

	/**
	 * The column <code>email_jnl.html</code>.
	 */
	public final TableField<EmailJnlRecord, String> HTML = createField("html", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>email_jnl.html_stripped</code>.
	 */
	public final TableField<EmailJnlRecord, String> HTML_STRIPPED = createField("html_stripped", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>email_jnl.text</code>.
	 */
	public final TableField<EmailJnlRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>email_jnl.text_stripped</code>.
	 */
	public final TableField<EmailJnlRecord, String> TEXT_STRIPPED = createField("text_stripped", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * Create a <code>email_jnl</code> table reference
	 */
	public EmailJnl() {
		this("email_jnl", null);
	}

	/**
	 * Create an aliased <code>email_jnl</code> table reference
	 */
	public EmailJnl(String alias) {
		this(alias, EMAIL_JNL);
	}

	private EmailJnl(String alias, Table<EmailJnlRecord> aliased) {
		this(alias, aliased, null);
	}

	private EmailJnl(String alias, Table<EmailJnlRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<EmailJnlRecord> getPrimaryKey() {
		return Keys.PK_EMAIL_JNL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<EmailJnlRecord>> getKeys() {
		return Arrays.<UniqueKey<EmailJnlRecord>>asList(Keys.PK_EMAIL_JNL);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TableField<EmailJnlRecord, Long> getRecordVersion() {
		return VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TableField<EmailJnlRecord, Timestamp> getRecordTimestamp() {
		return CHANGED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailJnl as(String alias) {
		return new EmailJnl(alias, this);
	}

	/**
	 * Rename this table
	 */
	public EmailJnl rename(String name) {
		return new EmailJnl(name, null);
	}
}
