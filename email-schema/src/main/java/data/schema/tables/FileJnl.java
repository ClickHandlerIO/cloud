/**
 * This class is generated by jOOQ
 */
package data.schema.tables;


import data.schema.DefaultSchema;
import data.schema.Keys;
import data.schema.tables.records.FileJnlRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileJnl extends TableImpl<FileJnlRecord> {

	private static final long serialVersionUID = 406627208;

	/**
	 * The reference instance of <code>file_jnl</code>
	 */
	public static final FileJnl FILE_JNL = new FileJnl();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FileJnlRecord> getRecordType() {
		return FileJnlRecord.class;
	}

	/**
	 * The column <code>file_jnl.id</code>.
	 */
	public final TableField<FileJnlRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

	/**
	 * The column <code>file_jnl.v</code>.
	 */
	public final TableField<FileJnlRecord, Long> V = createField("v", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>file_jnl.c</code>.
	 */
	public final TableField<FileJnlRecord, Timestamp> C = createField("c", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>file_jnl.name</code>.
	 */
	public final TableField<FileJnlRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>file_jnl.description</code>.
	 */
	public final TableField<FileJnlRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(4000), this, "");

	/**
	 * The column <code>file_jnl.content_type</code>.
	 */
	public final TableField<FileJnlRecord, String> CONTENT_TYPE = createField("content_type", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>file_jnl.md5</code>.
	 */
	public final TableField<FileJnlRecord, String> MD5 = createField("md5", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>file_jnl.etag</code>.
	 */
	public final TableField<FileJnlRecord, String> ETAG = createField("etag", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>file_jnl.compression</code>.
	 */
	public final TableField<FileJnlRecord, Integer> COMPRESSION = createField("compression", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>file_jnl.size</code>.
	 */
	public final TableField<FileJnlRecord, Long> SIZE = createField("size", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>file_jnl.store_bucket</code>.
	 */
	public final TableField<FileJnlRecord, String> STORE_BUCKET = createField("store_bucket", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>file_jnl.store_id</code>.
	 */
	public final TableField<FileJnlRecord, String> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>file_jnl.key_algorithm</code>.
	 */
	public final TableField<FileJnlRecord, String> KEY_ALGORITHM = createField("key_algorithm", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>file_jnl.key_key</code>.
	 */
	public final TableField<FileJnlRecord, String> KEY_KEY = createField("key_key", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>file_jnl.key_md5</code>.
	 */
	public final TableField<FileJnlRecord, String> KEY_MD5 = createField("key_md5", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>file_jnl.storage_class</code>.
	 */
	public final TableField<FileJnlRecord, String> STORAGE_CLASS = createField("storage_class", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

	/**
	 * Create a <code>file_jnl</code> table reference
	 */
	public FileJnl() {
		this("file_jnl", null);
	}

	/**
	 * Create an aliased <code>file_jnl</code> table reference
	 */
	public FileJnl(String alias) {
		this(alias, FILE_JNL);
	}

	private FileJnl(String alias, Table<FileJnlRecord> aliased) {
		this(alias, aliased, null);
	}

	private FileJnl(String alias, Table<FileJnlRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<FileJnlRecord> getPrimaryKey() {
		return Keys.PK_FILE_JNL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<FileJnlRecord>> getKeys() {
		return Arrays.<UniqueKey<FileJnlRecord>>asList(Keys.PK_FILE_JNL);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FileJnl as(String alias) {
		return new FileJnl(alias, this);
	}

	/**
	 * Rename this table
	 */
	public FileJnl rename(String name) {
		return new FileJnl(name, null);
	}
}
