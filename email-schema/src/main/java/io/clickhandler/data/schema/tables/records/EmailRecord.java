/**
 * This class is generated by jOOQ
 */
package io.clickhandler.data.schema.tables.records;


import io.clickhandler.data.schema.tables.Email;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailRecord extends UpdatableRecordImpl<EmailRecord> implements Record15<String, Long, Timestamp, String, String, String, String, String, String, String, String, String, String, Boolean, String> {

	private static final long serialVersionUID = 1940181745;

	/**
	 * Setter for <code>email.id</code>.
	 */
	public EmailRecord setId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>email.id</code>.
	 */
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>email.v</code>.
	 */
	public EmailRecord setV(Long value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>email.v</code>.
	 */
	public Long getV() {
		return (Long) getValue(1);
	}

	/**
	 * Setter for <code>email.c</code>.
	 */
	public EmailRecord setC(Timestamp value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>email.c</code>.
	 */
	public Timestamp getC() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>email.user_id</code>.
	 */
	public EmailRecord setUserId(String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>email.user_id</code>.
	 */
	public String getUserId() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>email.to</code>.
	 */
	public EmailRecord setTo(String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>email.to</code>.
	 */
	public String getTo() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>email.cc</code>.
	 */
	public EmailRecord setCc(String value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>email.cc</code>.
	 */
	public String getCc() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>email.from</code>.
	 */
	public EmailRecord setFrom(String value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>email.from</code>.
	 */
	public String getFrom() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>email.reply_to</code>.
	 */
	public EmailRecord setReplyTo(String value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>email.reply_to</code>.
	 */
	public String getReplyTo() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>email.subject</code>.
	 */
	public EmailRecord setSubject(String value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>email.subject</code>.
	 */
	public String getSubject() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>email.text_body</code>.
	 */
	public EmailRecord setTextBody(String value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>email.text_body</code>.
	 */
	public String getTextBody() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>email.stripped_text_body</code>.
	 */
	public EmailRecord setStrippedTextBody(String value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>email.stripped_text_body</code>.
	 */
	public String getStrippedTextBody() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>email.html_body</code>.
	 */
	public EmailRecord setHtmlBody(String value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>email.html_body</code>.
	 */
	public String getHtmlBody() {
		return (String) getValue(11);
	}

	/**
	 * Setter for <code>email.stripped_html_body</code>.
	 */
	public EmailRecord setStrippedHtmlBody(String value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>email.stripped_html_body</code>.
	 */
	public String getStrippedHtmlBody() {
		return (String) getValue(12);
	}

	/**
	 * Setter for <code>email.attachments</code>.
	 */
	public EmailRecord setAttachments(Boolean value) {
		setValue(13, value);
		return this;
	}

	/**
	 * Getter for <code>email.attachments</code>.
	 */
	public Boolean getAttachments() {
		return (Boolean) getValue(13);
	}

	/**
	 * Setter for <code>email.message_id</code>.
	 */
	public EmailRecord setMessageId(String value) {
		setValue(14, value);
		return this;
	}

	/**
	 * Getter for <code>email.message_id</code>.
	 */
	public String getMessageId() {
		return (String) getValue(14);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record15 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row15<String, Long, Timestamp, String, String, String, String, String, String, String, String, String, String, Boolean, String> fieldsRow() {
		return (Row15) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row15<String, Long, Timestamp, String, String, String, String, String, String, String, String, String, String, Boolean, String> valuesRow() {
		return (Row15) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Email.EMAIL.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return Email.EMAIL.V;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return Email.EMAIL.C;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Email.EMAIL.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Email.EMAIL.TO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Email.EMAIL.CC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Email.EMAIL.FROM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return Email.EMAIL.REPLY_TO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Email.EMAIL.SUBJECT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return Email.EMAIL.TEXT_BODY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return Email.EMAIL.STRIPPED_TEXT_BODY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return Email.EMAIL.HTML_BODY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field13() {
		return Email.EMAIL.STRIPPED_HTML_BODY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field14() {
		return Email.EMAIL.ATTACHMENTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field15() {
		return Email.EMAIL.MESSAGE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getV();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getC();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getTo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getCc();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getFrom();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getReplyTo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getSubject();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getTextBody();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getStrippedTextBody();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getHtmlBody();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value13() {
		return getStrippedHtmlBody();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value14() {
		return getAttachments();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value15() {
		return getMessageId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value2(Long value) {
		setV(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value3(Timestamp value) {
		setC(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value4(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value5(String value) {
		setTo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value6(String value) {
		setCc(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value7(String value) {
		setFrom(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value8(String value) {
		setReplyTo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value9(String value) {
		setSubject(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value10(String value) {
		setTextBody(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value11(String value) {
		setStrippedTextBody(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value12(String value) {
		setHtmlBody(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value13(String value) {
		setStrippedHtmlBody(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value14(Boolean value) {
		setAttachments(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord value15(String value) {
		setMessageId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRecord values(String value1, Long value2, Timestamp value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, String value13, Boolean value14, String value15) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EmailRecord
	 */
	public EmailRecord() {
		super(Email.EMAIL);
	}

	/**
	 * Create a detached, initialised EmailRecord
	 */
	public EmailRecord(String id, Long v, Timestamp c, String userId, String to, String cc, String from, String replyTo, String subject, String textBody, String strippedTextBody, String htmlBody, String strippedHtmlBody, Boolean attachments, String messageId) {
		super(Email.EMAIL);

		setValue(0, id);
		setValue(1, v);
		setValue(2, c);
		setValue(3, userId);
		setValue(4, to);
		setValue(5, cc);
		setValue(6, from);
		setValue(7, replyTo);
		setValue(8, subject);
		setValue(9, textBody);
		setValue(10, strippedTextBody);
		setValue(11, htmlBody);
		setValue(12, strippedHtmlBody);
		setValue(13, attachments);
		setValue(14, messageId);
	}
}
